@charset "UTF-8";
/*------------------------------------*\
RESET
\*------------------------------------*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var, b, u, i, center,
dl, dt, dd, ol, ul, li, fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: ’’;
  content: none; }

ins {
  text-decoration: none; }

del {
  text-decoration: line-through; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

img {
  border: 0;
  -ms-interpolation-mode: bicubic; }

input,
select,
textarea {
  font: inherit; }

*, *:after, *:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

@-webkit-viewport {
  width: device-width; }

@-moz-viewport {
  width: device-width; }

@-ms-viewport {
  width: device-width; }

@-o-viewport {
  width: device-width; }

@viewport {
  width: device-width; }

img, video {
  max-width: 100%;
  height: auto;
  width: auto/9; }

/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */
/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/
/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */
/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
/**
 * Set the spacing between your grid items.
 */
/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */
/**
 * Would you like push and pull classes enabled?
 */
/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */
/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
header, nav ul, .intro, .about, .work, .work-page, .article-page, .articles, .feed, footer, .portfolio, .work-page .description {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -25px;
  /* [3] */
  letter-spacing: -0.31em; }

/* Opera hack */
.opera:-o-prefocus,
header,
nav ul,
.intro,
.about,
.work,
.work-page,
.article-page,
.articles,
.feed,
footer,
.portfolio,
.work-page .description {
  word-spacing: -0.43em; }

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
header h1,
nav,
nav ul li,
.intro > article,
.work > article,
.about > article,
.articles > article,
.article-page > .meta,
.article-page > h2,
.article-page > article,
.work-page article,
.work-page aside,
.work-page .product-shot,
footer p, .portfolio figure {
  display: inline-block;
  /* [1] */
  padding-left: 25px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  -webkit-box-sizing: border-box;
  /* [5] */
  -moz-box-sizing: border-box;
  /* [5] */
  box-sizing: border-box;
  /* [5] */
  letter-spacing: normal;
  word-spacing: normal; }

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
.portfolio {
  margin-left: 0; }
  header .portfolio > h1,
  .portfolio > nav,
  nav ul .portfolio > li,
  .intro.portfolio > article,
  .work.portfolio > article,
  .about.portfolio > article,
  .articles.portfolio > article,
  .article-page.portfolio > .meta,
  .article-page.portfolio > h2,
  .article-page.portfolio > article,
  .work-page .portfolio > article,
  .work-page .portfolio > aside,
  .work-page .portfolio > .product-shot,
  footer .portfolio > p, .portfolio > figure {
    padding-left: 0; }

/**
 * Align the entire grid to the right. Extends `.grid`.
 */
/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
.intro, .about, .articles, .article-page, .work-page .description {
  text-align: center; }
  header .intro > h1, header .about > h1, header .articles > h1, header .article-page > h1, .work-page header .description > h1, header .work-page .description > h1,
  .intro > nav,
  .about > nav,
  .articles > nav,
  .article-page > nav,
  .work-page .description > nav,
  nav ul .intro > li,
  nav ul .about > li,
  nav ul .articles > li,
  nav ul .article-page > li,
  .work-page nav ul .description > li,
  nav ul .work-page .description > li,
  .intro > article,
  .about > article,
  .articles > article,
  .article-page > .meta,
  .article-page > h2,
  .work-page .article-page.description > h2,
  .article-page > article,
  .work-page .description > article,
  .work-page .intro > aside,
  .work-page .about > aside,
  .work-page .articles > aside,
  .work-page .article-page > aside,
  .work-page .description > aside,
  .work-page .intro > .product-shot,
  .work-page .about > .product-shot,
  .work-page .articles > .product-shot,
  .work-page .article-page > .product-shot,
  .work-page .description > .product-shot,
  footer .intro > p,
  footer .about > p,
  footer .articles > p,
  footer .article-page > p,
  .work-page footer .description > p,
  footer .work-page .description > p, .portfolio .intro > figure, .portfolio .about > figure, .portfolio .articles > figure, .portfolio .article-page > figure, .work-page .portfolio .description > figure, .portfolio .work-page .description > figure {
    text-align: left; }

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
header > h1, header footer > h1,
header > nav,
footer > nav,
nav ul header > li,
nav ul footer > li,
header.intro > article,
footer.intro > article,
header.work > article,
footer.work > article,
header.about > article,
footer.about > article,
header.articles > article,
footer.articles > article,
header.article-page > .meta,
footer.article-page > .meta,
header.article-page > h2,
footer.article-page > h2,
header.article-page > article,
footer.article-page > article,
.work-page header > article,
.work-page footer > article,
.work-page header > aside,
.work-page footer > aside,
.work-page header > .product-shot,
.work-page footer > .product-shot,
footer header > p,
footer > p, .portfolio header > figure, .portfolio footer > figure {
  vertical-align: middle; }

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
/**
 * Create grids with wider gutters. Extends `.grid`.
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
/**
 * Our regular, non-responsive width classes.
 */
/**
 * Whole
 */
.work-page article, .work-page .product-shot {
  width: 100%; }

/**
 * Halves
 */
header h1, header nav, .portfolio figure {
  width: 50%; }

/**
 * Thirds
 */
header nav ul li, .work > article {
  width: 33.333%; }

.work-page aside {
  width: 66.666%; }

/**
 * Quarters
 */
/**
 * Fifths
 */
.intro > article, .about > article, .articles > article, .article-page > article {
  width: 60%; }

/**
 * Sixths
 */
/**
 * Eighths
 */
/**
 * Tenths
 */
/**
 * Twelfths
 */
/**
 * Our responsive classes, if we have enabled them.
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  header h1, header nav, .intro > article, .about > article, .articles > article, .article-page > article, .work > article, .portfolio figure {
    width: 100%; }

  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  .intro > article, .about > article, .articles > article, .article-page > article {
    width: 66.666%; }

  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  .work-page aside {
    width: 100%; }

  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
[class*="push--"] {
  position: relative; }

/**
 * Whole
 */
/**
 * Halves
 */
/**
 * Thirds
 */
/**
 * Quarters
 */
/**
 * Fifths
 */
/**
 * Sixths
 */
/**
 * Eighths
 */
/**
 * Tenths
 */
/**
 * Twelfths
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
[class*="pull--"] {
  position: relative; }

/**
 * Whole
 */
/**
 * Halves
 */
/**
 * Thirds
 */
/**
 * Quarters
 */
/**
 * Fifths
 */
/**
 * Sixths
 */
/**
 * Eighths
 */
/**
 * Tenths
 */
/**
 * Twelfths
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /**
   * Halves
   */
  /**
   * Thirds
   */
  /**
   * Quarters
   */
  /**
   * Fifths
   */
  /**
   * Sixths
   */
  /**
   * Eighths
   */
  /**
   * Tenths
   */
  /**
   * Twelfths
   */ }
body {
  font: normal 100%/1.4 Georgia, "Times New Roman", serif;
  color: #5e5e66;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body, input, button {
  -webkit-font-smoothing: antialiased; }

a {
  color: #adaba8;
  text-decoration: none;
  -webkit-transition: color 200ms ease-in;
  -moz-transition: color 200ms ease-in;
  -o-transition: color 200ms ease-in;
  transition: color 200ms ease-in;
  -webkit-backface-visibility: hidden; }
  a:hover {
    color: #7a7874;
    -webkit-transition: color 200ms ease-out;
    -moz-transition: color 200ms ease-out;
    -o-transition: color 200ms ease-out;
    transition: color 200ms ease-out;
    -webkit-backface-visibility: hidden; }

h1, h2, h3, h4, h5, h6 {
  font: bold 100%/1.4 Helvetica, Arial, Verdana, sans-serif; }

h1 {
  font-size: 42px;
  font-size: 2.625rem; }

h2 {
  font-size: 31.5px;
  font-size: 1.96875rem; }

h3 {
  font-size: 24.57px;
  font-size: 1.53563rem; }

h4 {
  font-size: 21px;
  font-size: 1.3125rem; }

h5 {
  font-size: 17.43px;
  font-size: 1.08938rem; }

h6 {
  font-size: 15.75px;
  font-size: 0.98438rem; }

p {
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 1.45;
  margin-bottom: 25px;
  word-break: break-all;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto; }

b, strong {
  font-weight: bold; }

i, em {
  font-style: italic; }

u, ins {
  text-decoration: underline; }

s, strike, del {
  text-decoration: line-through; }

code, tt, pre,
kbd, var, samp {
  font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", monospace; }

code, samp, kbd {
  text-align: left;
  color: #5e5e66;
  background: #f2f2f2; }

pre code {
  line-height: 1.45;
  font-size: 21px;
  font-size: 1.3125rem; }

pre {
  padding: 1.3125rem;
  margin: 1.90313rem 0;
  overflow: auto;
  width: 93%;
  background: #f2f2f2; }

*:first-child + html pre {
  padding-bottom: 1.90313rem;
  overflow-y: hidden;
  overflow: visible;
  overflow-x: auto; }

* html pre {
  padding-bottom: 1.90313rem;
  overflow: visible;
  overflow-x: auto; }

small {
  font-size: 17.85px;
  font-size: 1.11562rem; }

big {
  font-size: 25.2px;
  font-size: 1.575rem; }

sup {
  font-size: 10.5px;
  vertical-align: super; }

sub {
  font-size: 10.5px;
  vertical-align: sub; }

hr {
  margin: 3.80625rem 0; }

blockquote {
  text-align: center;
  font-weight: bold;
  width: 60%;
  margin: 0 auto 1.90313rem;
  padding: 1.90313rem 0; }

header {
  color: #adaba8;
  line-height: 120px; }
  header h1 {
    font-size: 28px;
    font-weight: bold; }
  header nav ul li {
    text-align: right; }

.intro > article {
  text-align: center; }
.intro h1 {
  font-size: 36px;
  font-weight: bold;
  margin-bottom: 25px; }
.intro p {
  color: #a19e9b; }
  .intro p a {
    color: #93918e; }

footer {
  text-align: center;
  padding-bottom: 100px; }
  footer .available {
    color: #73A945; }
  footer .unavailable {
    color: #D83500;
    text-decoration: line-through; }
  footer .contact {
    color: #adaba8; }
  footer .social a {
    padding: 0 5%; }

* {
  -webkit-animation-delay: 0.25s;
  -webkit-animation-duration: 0.5s;
  -webkit-animation-name: fadeIn;
  -webkit-animation-fill-mode: both;
  -moz-animation-delay: 0.25s;
  -moz-animation-duration: 0.5s;
  -moz-animation-name: fadeIn;
  -moz-animation-fill-mode: both;
  animation-delay: 0.25s;
  animation-duration: 0.5s;
  animation-name: fadeIn;
  animation-fill-mode: both; }

header, nav ul, .intro, .about article, .work, .article-page, .articles, .feed, footer {
  padding: 0 20px; }

header, .intro, .work, .about, .work-page .description, .portfolio, .articles, footer {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }

.intro, .about, .portfolio, .articles {
  padding-top: 50px; }

header {
  height: 120px;
  border-bottom: 1px solid #eeeeee; }

footer {
  border-top: 1px solid #eeeeee;
  padding-top: 25px; }

.intro, .about, .articles, .article-page {
  margin-bottom: 25px; }

.work {
  margin-bottom: 75px; }
  .work > article {
    margin-bottom: 25px; }

.articles .post {
  margin-bottom: 25px;
  border-bottom: 1px solid #eeeeee; }

.article-page {
  margin-bottom: 75px; }
  .article-page .meta, .article-page .meta + h2 {
    text-align: center; }
  .article-page .meta {
    margin-bottom: 0;
    color: #adaba8;
    font-size: 1em; }
  .article-page h2 {
    font-size: 4em;
    margin-bottom: 25px; }

.portfolio figure {
  margin-bottom: 25px;
  padding: 0 12.5px;
  position: relative; }
.portfolio figcaption {
  position: absolute;
  display: block;
  top: 5%;
  right: 5%;
  bottom: 5%;
  left: 5%;
  background-color: rgba(255, 255, 255, 0.85);
  -webkit-animation-delay: 500ms;
  -webkit-animation-duration: 0ms;
  -webkit-animation-name: fadeOut;
  -webkit-animation-fill-mode: both;
  -moz-animation-delay: 500ms;
  -moz-animation-duration: 0ms;
  -moz-animation-name: fadeOut;
  -moz-animation-fill-mode: both;
  animation-delay: 500ms;
  animation-duration: 0ms;
  animation-name: fadeOut;
  animation-fill-mode: both;
  opacity: 0;
  filter: alpha(opacity=0);
  zoom: 1;
  -webkit-transition: all 200ms linear;
  -moz-transition: all 200ms linear;
  -o-transition: all 200ms linear;
  transition: all 200ms linear;
  -webkit-backface-visibility: hidden; }
  .portfolio figcaption:hover {
    opacity: 1;
    filter: alpha(opacity=100);
    zoom: 1;
    -webkit-transition: all 100ms linear;
    -moz-transition: all 100ms linear;
    -o-transition: all 100ms linear;
    transition: all 100ms linear;
    -webkit-backface-visibility: hidden; }
  .portfolio figcaption p {
    text-align: center;
    color: #46464b;
    text-align: center;
    position: absolute;
    top: 50%;
    height: 25px;
    width: 100%;
    margin-top: -12.5px; }
.portfolio img {
  display: block; }

.work-page {
  margin-bottom: 25px; }
  .work-page h2 {
    margin-bottom: 25px; }
  .work-page .description {
    padding: 0 20px; }
  .work-page aside {
    padding-top: 50px;
    padding-bottom: 50px; }
  .work-page .product-shot {
    margin-bottom: 25px; }
  .work-page .browser {
    background: #eeeeee;
    border-radius: 4px;
    margin-bottom: 50px; }
    .work-page .browser .toolbar {
      padding: 5px 15px;
      font-size: 2em;
      letter-spacing: -2px; }
    .work-page .browser img {
      margin-bottom: 10px; }

.featured-image {
  height: 650px;
  margin-bottom: 25px;
  width: 100%;
  background-repeat: no-repeat;
  background-position: center center;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-transition: height 200ms linear;
  -moz-transition: height 200ms linear;
  -o-transition: height 200ms linear;
  transition: height 200ms linear;
  -webkit-backface-visibility: hidden; }

.animated {
  -webkit-animation-fill-mode: both;
  -moz-animation-fill-mode: both;
  -ms-animation-fill-mode: both;
  -o-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  -ms-animation-duration: 1s;
  -o-animation-duration: 1s;
  animation-duration: 1s; }

.animated.hinge {
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  -ms-animation-duration: 1s;
  -o-animation-duration: 1s;
  animation-duration: 1s; }

@-webkit-keyframes fadeIn {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@-moz-keyframes fadeIn {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@-o-keyframes fadeIn {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

@keyframes fadeIn {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

.fadeIn {
  -webkit-animation-name: fadeIn;
  -moz-animation-name: fadeIn;
  -o-animation-name: fadeIn;
  animation-name: fadeIn; }

@-webkit-keyframes fadeInUp {
  0% {
    opacity: 0;
    -webkit-transform: translateY(20px); }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0); } }

@-moz-keyframes fadeInUp {
  0% {
    opacity: 0;
    -moz-transform: translateY(20px); }

  100% {
    opacity: 1;
    -moz-transform: translateY(0); } }

@-o-keyframes fadeInUp {
  0% {
    opacity: 0;
    -o-transform: translateY(20px); }

  100% {
    opacity: 1;
    -o-transform: translateY(0); } }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px); }

  100% {
    opacity: 1;
    transform: translateY(0); } }

.fadeInUp {
  -webkit-animation-name: fadeInUp;
  -moz-animation-name: fadeInUp;
  -o-animation-name: fadeInUp;
  animation-name: fadeInUp; }

@-webkit-keyframes fadeInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-20px); }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0); } }

@-moz-keyframes fadeInDown {
  0% {
    opacity: 0;
    -moz-transform: translateY(-20px); }

  100% {
    opacity: 1;
    -moz-transform: translateY(0); } }

@-o-keyframes fadeInDown {
  0% {
    opacity: 0;
    -o-transform: translateY(-20px); }

  100% {
    opacity: 1;
    -o-transform: translateY(0); } }

@keyframes fadeInDown {
  0% {
    opacity: 0;
    transform: translateY(-20px); }

  100% {
    opacity: 1;
    transform: translateY(0); } }

.fadeInDown {
  -webkit-animation-name: fadeInDown;
  -moz-animation-name: fadeInDown;
  -o-animation-name: fadeInDown;
  animation-name: fadeInDown; }

@-webkit-keyframes fadeInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-20px); }

  100% {
    opacity: 1;
    -webkit-transform: translateX(0); } }

@-moz-keyframes fadeInLeft {
  0% {
    opacity: 0;
    -moz-transform: translateX(-20px); }

  100% {
    opacity: 1;
    -moz-transform: translateX(0); } }

@-o-keyframes fadeInLeft {
  0% {
    opacity: 0;
    -o-transform: translateX(-20px); }

  100% {
    opacity: 1;
    -o-transform: translateX(0); } }

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    transform: translateX(-20px); }

  100% {
    opacity: 1;
    transform: translateX(0); } }

.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
  -moz-animation-name: fadeInLeft;
  -o-animation-name: fadeInLeft;
  animation-name: fadeInLeft; }

@-webkit-keyframes fadeInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(20px); }

  100% {
    opacity: 1;
    -webkit-transform: translateX(0); } }

@-moz-keyframes fadeInRight {
  0% {
    opacity: 0;
    -moz-transform: translateX(20px); }

  100% {
    opacity: 1;
    -moz-transform: translateX(0); } }

@-o-keyframes fadeInRight {
  0% {
    opacity: 0;
    -o-transform: translateX(20px); }

  100% {
    opacity: 1;
    -o-transform: translateX(0); } }

@keyframes fadeInRight {
  0% {
    opacity: 0;
    transform: translateX(20px); }

  100% {
    opacity: 1;
    transform: translateX(0); } }

.fadeInRight {
  -webkit-animation-name: fadeInRight;
  -moz-animation-name: fadeInRight;
  -o-animation-name: fadeInRight;
  animation-name: fadeInRight; }

@-webkit-keyframes fadeInUpBig {
  0% {
    opacity: 0;
    -webkit-transform: translateY(2000px); }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0); } }

@-moz-keyframes fadeInUpBig {
  0% {
    opacity: 0;
    -moz-transform: translateY(2000px); }

  100% {
    opacity: 1;
    -moz-transform: translateY(0); } }

@-o-keyframes fadeInUpBig {
  0% {
    opacity: 0;
    -o-transform: translateY(2000px); }

  100% {
    opacity: 1;
    -o-transform: translateY(0); } }

@keyframes fadeInUpBig {
  0% {
    opacity: 0;
    transform: translateY(2000px); }

  100% {
    opacity: 1;
    transform: translateY(0); } }

.fadeInUpBig {
  -webkit-animation-name: fadeInUpBig;
  -moz-animation-name: fadeInUpBig;
  -o-animation-name: fadeInUpBig;
  animation-name: fadeInUpBig; }

@-webkit-keyframes fadeInDownBig {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-2000px); }

  100% {
    opacity: 1;
    -webkit-transform: translateY(0); } }

@-moz-keyframes fadeInDownBig {
  0% {
    opacity: 0;
    -moz-transform: translateY(-2000px); }

  100% {
    opacity: 1;
    -moz-transform: translateY(0); } }

@-o-keyframes fadeInDownBig {
  0% {
    opacity: 0;
    -o-transform: translateY(-2000px); }

  100% {
    opacity: 1;
    -o-transform: translateY(0); } }

@keyframes fadeInDownBig {
  0% {
    opacity: 0;
    transform: translateY(-2000px); }

  100% {
    opacity: 1;
    transform: translateY(0); } }

.fadeInDownBig {
  -webkit-animation-name: fadeInDownBig;
  -moz-animation-name: fadeInDownBig;
  -o-animation-name: fadeInDownBig;
  animation-name: fadeInDownBig; }

@-webkit-keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-2000px); }

  100% {
    opacity: 1;
    -webkit-transform: translateX(0); } }

@-moz-keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    -moz-transform: translateX(-2000px); }

  100% {
    opacity: 1;
    -moz-transform: translateX(0); } }

@-o-keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    -o-transform: translateX(-2000px); }

  100% {
    opacity: 1;
    -o-transform: translateX(0); } }

@keyframes fadeInLeftBig {
  0% {
    opacity: 0;
    transform: translateX(-2000px); }

  100% {
    opacity: 1;
    transform: translateX(0); } }

.fadeInLeftBig {
  -webkit-animation-name: fadeInLeftBig;
  -moz-animation-name: fadeInLeftBig;
  -o-animation-name: fadeInLeftBig;
  animation-name: fadeInLeftBig; }

@-webkit-keyframes fadeInRightBig {
  0% {
    opacity: 0;
    -webkit-transform: translateX(2000px); }

  100% {
    opacity: 1;
    -webkit-transform: translateX(0); } }

@-moz-keyframes fadeInRightBig {
  0% {
    opacity: 0;
    -moz-transform: translateX(2000px); }

  100% {
    opacity: 1;
    -moz-transform: translateX(0); } }

@-o-keyframes fadeInRightBig {
  0% {
    opacity: 0;
    -o-transform: translateX(2000px); }

  100% {
    opacity: 1;
    -o-transform: translateX(0); } }

@keyframes fadeInRightBig {
  0% {
    opacity: 0;
    transform: translateX(2000px); }

  100% {
    opacity: 1;
    transform: translateX(0); } }

.fadeInRightBig {
  -webkit-animation-name: fadeInRightBig;
  -moz-animation-name: fadeInRightBig;
  -o-animation-name: fadeInRightBig;
  animation-name: fadeInRightBig; }

body {
  background: white;
  max-width: 1600px;
  margin: 0 auto; }

@media (min-width: 1600px) {
  .work-page .description {
    padding: 0 0 0 0; }

  .featured-image {
    height: 850px; } }
@media (max-width: 1023px) {
  .featured-image {
    height: 500px; }

  .work-page .description aside,
  .work-page .description .product-shot {
    padding-left: 0; } }
@media (max-width: 480px) {
  h1, h2, h3, h4, h5, h6 {
    font-size: 21px;
    font-size: 1.3125rem;
    font-weight: bold; }

  header h1,
  header nav,
  .portfolio article {
    padding-left: 0; }

  header {
    line-height: 1.74;
    padding: 25px 0; }

  header h1 {
    margin-bottom: 12.5px; }

  header h1, header nav ul li {
    text-align: center; }

  .intro h1 {
    font-size: 24px; }

  .featured-image {
    height: 320px; }

  .article-page .meta + h2 {
    font-size: 2em; } }
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important; }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }

  h2,
  h3 {
    page-break-after: avoid; } }
